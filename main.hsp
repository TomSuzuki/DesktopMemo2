#define global ctype decRGB(%1) %1>>16 & 0xFF,%1>>8 & 0xFF,%1 & 0xFF

// 設定
#define global DATA_FOLDER "./data"
#define global BOX_FONT	"Yu Gothic UI"
#define global FONT_SIZE	18
#define global FONT_OPTION 1

// グローバル変数
#define global window _window@
#define global btnimage _btnimage@

// メニュー用
#enum IDM_MEMO = 1
#enum IDM_SETTING
#enum IDM_EXIT

// WINAPI
#const global WM_CONTEXTMENU 0x007B

#include "gdi32.as"
#include "user32.as"
#include "obj.as"

#include "./module/lib.hsp"
#include "./module/trayicon.hsp"

#include "./module/memo.hsp"

	gsel 0,-1

	// 終了時処理の登録
	onexit *exit

	// タスクトレイの設定
	SetTrayIconFile "./image/favicon.ico"
	CreateTrayIcon "desktop memo",0,0

	// メニュー
	CreatePopupMenu
	hMenu.0 = stat
		AppendMenu hMenu.0, 0, IDM_MEMO, "新しいメモを作成"
		AppendMenu hMenu.0, 0, IDM_SETTING, "設定"
		AppendMenu hMenu.0, $800, 0, ""
		AppendMenu hMenu.0, 0, IDM_EXIT, "終了"

	// ボタン画像のロード
	btnimage = ginfo_newid
	buffer btnimage,32*2,32*3*4
	color 0:boxf
	pos 32,32*3*0:picload "./image/add.gif",1
	pos 32,32*3*1:picload "./image/pin.gif",1
	pos 32,32*3*2:picload "./image/col.gif",1
	pos 32,32*3*3:picload "./image/del.gif",1
	gmode 0,32,32
	repeat 4
		y = cnt*32*3
		repeat 2,1
			pos 32,cnt*32+y
			gcopy btnimage,32,y,32,32
		loop
	loop
	repeat 4
		y = cnt*96
		color decRGB(0xCCCCCC):boxf 0,y+00,31,y+32
		color decRGB(0xFFFFFF):boxf 0,y+32,31,y+64
		color decRGB(0xAAAAAA):boxf 0,y+64,31,y+96
	loop

	// 初期化
	dimtype window,vartype("struct")	// ウィンドウ

	// データがあれば読み込み or 初期ウィンドウの生成
	gosub *loadData
	
	stop

// データの読み込みを行う
*loadData
	// ディレクトリが無ければ作成する。
	dirlist temp,DATA_FOLDER,5
	if stat == 0:mkdir DATA_FOLDER

	// ファイルのリスト
	dirlist list,DATA_FOLDER+"/*.memo",1
	if stat == 0{
		createMemo
	}else{
		notesel list
		repeat stat
			notesel list
			noteget fname,cnt
			loadMemo DATA_FOLDER+"/"+fname	// ウィンドウの生成
		loop
		noteunsel
	}
	
	return

// ファイルを読み込んでウィンドウを生成（グローバルじゃないとnewmodでエラー）
#deffunc loadMemo str _fname
	newmod window,modMemo,_fname
	return

// 新しい空のメモを作成
#deffunc createMemo
	loadMemo ""
	return

// タスクトレイのアイコンがクリックされた。
*onTrayIconEvent
	if lparam == 0x0202 || lparam == 0x0205{
		gsel 0
		TrackPopupMenu hMenu.0, $100, ginfo(0), ginfo(1), 0, hwnd, 0
		if stat = 0:return
		switch stat
		case IDM_MEMO
			createMemo
			swbreak
		case IDM_SETTING
			swbreak
		case IDM_EXIT
			goto *exit
			end
		swend
	}
	return


// 終了時処理
*exit
	gsel 0,1
	foreach window
		delmod window(cnt)
	loop
	DestroyMenu hMenu.0
	end